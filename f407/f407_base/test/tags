!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FIELD_DESCRIPTION!LdScript	assignment	/how a value is assigned to the symbol/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!LdScript	S,section	/sections/
!_TAG_KIND_DESCRIPTION!LdScript	i,inputSection	/input sections/
!_TAG_KIND_DESCRIPTION!LdScript	s,symbol	/symbols/
!_TAG_KIND_DESCRIPTION!LdScript	v,version	/versions/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C	0.0	/current.age/
!_TAG_PARSER_VERSION!C++	0.0	/current.age/
!_TAG_PARSER_VERSION!LdScript	0.0	/current.age/
!_TAG_PARSER_VERSION!Make	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/klolrannet/projects/stm32/f407/f407_base/test/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	//
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!LdScript!inputSection	discarded	/discarded when linking/
!_TAG_ROLE_DESCRIPTION!LdScript!inputSection	mapped	/mapped to output section/
!_TAG_ROLE_DESCRIPTION!LdScript!symbol	entrypoint	/entry points/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
CC	Makefile	/^CC=arm-none-eabi-gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS=-mcpu=cortex-m4 -mthumb -nostdlib -g -O0$/;"	m
CPPFLAGS	Makefile	/^CPPFLAGS=-DSTM32F407xx \\$/;"	m
ISR_VECTOR_SIZE_WORDS	startup.c	/^#define ISR_VECTOR_SIZE_WORDS /;"	d	file:
LDFLAGS	Makefile	/^LDFLAGS=-T $(LINKER_FILE) -g$/;"	m
LED1_PIN	main.c	/^#define LED1_PIN /;"	d	file:
LED2_PIN	main.c	/^#define LED2_PIN /;"	d	file:
LINKER_FILE	Makefile	/^LINKER_FILE=link.ld$/;"	m
ORIGIN	link.ld	/^	FLASH (rx):	ORIGIN = 0x08000000, LENGTH = 512K$/;"	s
SOURCES	Makefile	/^SOURCES = main.c startup.c ..\/vendor\/CMSIS\/Device\/ST\/STM32F4\/Source\/Templates\/system_stm/;"	m
SRAM_END	startup.c	/^#define SRAM_END /;"	d	file:
SRAM_SIZE	startup.c	/^#define SRAM_SIZE /;"	d	file:
SRAM_START	startup.c	/^#define SRAM_START /;"	d	file:
STACK_POINTER_INIT_ADDRESS	startup.c	/^#define STACK_POINTER_INIT_ADDRESS /;"	d	file:
UART_H_SENTRY	uart.h	/^#define UART_H_SENTRY$/;"	d
VECTOR_TAB_SRAM	main.c	/^#define VECTOR_TAB_SRAM$/;"	d	file:
_ebss	link.ld	/^		_ebss = .;$/;"	s
_edata	link.ld	/^		_edata = .;$/;"	s
_etext	link.ld	/^		_etext = .;$/;"	s
_sbss	link.ld	/^		_sbss = .;$/;"	s
_sdata	link.ld	/^		_sdata = .;$/;"	s
all	Makefile	/^all: firmware.elf$/;"	t
clean	Makefile	/^clean:$/;"	t
default_handler	startup.c	/^void default_handler(void)$/;"	f	typeref:typename:void
delay_ms	main.c	/^void delay_ms(uint32_t ms)$/;"	f	typeref:typename:void
firmware.bin	Makefile	/^firmware.bin: firmware.elf$/;"	t
firmware.elf	Makefile	/^firmware.elf: $(SOURCES)$/;"	t
flash	Makefile	/^flash: firmware.bin$/;"	t
isr_vector	startup.c	/^uint32_t isr_vector[ISR_VECTOR_SIZE_WORDS] __attribute__((section(".isr_vector"))) = {$/;"	v	typeref:typename:uint32_t[]
main	main.c	/^int main(void)$/;"	f	typeref:typename:int
rcc_deinit	main.c	/^void rcc_deinit()$/;"	f	typeref:typename:void
rcc_init	main.c	/^void rcc_init() {$/;"	f	typeref:typename:void
reset_handler	startup.c	/^void reset_handler(void)$/;"	f	typeref:typename:void
systick_handler	main.c	/^void systick_handler()$/;"	f	typeref:typename:void
ticks	main.c	/^volatile uint32_t ticks = 0;$/;"	v	typeref:typename:volatile uint32_t
uart_enable	uart.c	/^void uart_enable(USART_TypeDef *uart)$/;"	f	typeref:typename:void
uart_init	uart.c	/^void uart_init(USART_TypeDef *uart, uint32_t baud)$/;"	f	typeref:typename:void
uart_int_rx_enable	uart.c	/^void uart_int_rx_enable(USART_TypeDef *uart)$/;"	f	typeref:typename:void
uart_put_char	uart.c	/^void uart_put_char(USART_TypeDef *uart, char c)$/;"	f	typeref:typename:void
uart_put_str	uart.c	/^void uart_put_str(USART_TypeDef *uart, char *str)$/;"	f	typeref:typename:void
usart1_handler	main.c	/^void usart1_handler()$/;"	f	typeref:typename:void
